// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// binomial_simple
SEXP binomial_simple(SEXP y_r, SEXP n_r, int burnin, int run, double r0, int mc_draws);
RcppExport SEXP ImbalancedPG_binomial_simple(SEXP y_rSEXP, SEXP n_rSEXP, SEXP burninSEXP, SEXP runSEXP, SEXP r0SEXP, SEXP mc_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type run(runSEXP);
    Rcpp::traits::input_parameter< double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< int >::type mc_draws(mc_drawsSEXP);
    __result = Rcpp::wrap(binomial_simple(y_r, n_r, burnin, run, r0, mc_draws));
    return __result;
END_RCPP
}
// logit_reg_simple
SEXP logit_reg_simple(SEXP y, SEXP X, SEXP b, SEXP B, int burnin, int run, double r0, int mc_draws);
RcppExport SEXP ImbalancedPG_logit_reg_simple(SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP burninSEXP, SEXP runSEXP, SEXP r0SEXP, SEXP mc_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type run(runSEXP);
    Rcpp::traits::input_parameter< double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< int >::type mc_draws(mc_drawsSEXP);
    __result = Rcpp::wrap(logit_reg_simple(y, X, b, B, burnin, run, r0, mc_draws));
    return __result;
END_RCPP
}
// poisson_reg
SEXP poisson_reg(SEXP y, SEXP X, SEXP b, SEXP B, int burnin, int run, double r0ini, double c, int mc_draws);
RcppExport SEXP ImbalancedPG_poisson_reg(SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP burninSEXP, SEXP runSEXP, SEXP r0iniSEXP, SEXP cSEXP, SEXP mc_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type run(runSEXP);
    Rcpp::traits::input_parameter< double >::type r0ini(r0iniSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type mc_draws(mc_drawsSEXP);
    __result = Rcpp::wrap(poisson_reg(y, X, b, B, burnin, run, r0ini, c, mc_draws));
    return __result;
END_RCPP
}
// probit_reg_px
SEXP probit_reg_px(SEXP y, SEXP X, SEXP b, SEXP B, int burnin, int run, double r0, int mc_draws, double nu0);
RcppExport SEXP ImbalancedPG_probit_reg_px(SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP burninSEXP, SEXP runSEXP, SEXP r0SEXP, SEXP mc_drawsSEXP, SEXP nu0SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type run(runSEXP);
    Rcpp::traits::input_parameter< double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< int >::type mc_draws(mc_drawsSEXP);
    Rcpp::traits::input_parameter< double >::type nu0(nu0SEXP);
    __result = Rcpp::wrap(probit_reg_px(y, X, b, B, burnin, run, r0, mc_draws, nu0));
    return __result;
END_RCPP
}
// probit_reg_simple
SEXP probit_reg_simple(SEXP y, SEXP X, SEXP b, SEXP B, int burnin, int run, double r0, int mc_draws);
RcppExport SEXP ImbalancedPG_probit_reg_simple(SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP burninSEXP, SEXP runSEXP, SEXP r0SEXP, SEXP mc_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type run(runSEXP);
    Rcpp::traits::input_parameter< double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< int >::type mc_draws(mc_drawsSEXP);
    __result = Rcpp::wrap(probit_reg_simple(y, X, b, B, burnin, run, r0, mc_draws));
    return __result;
END_RCPP
}
// rpg
SEXP rpg(SEXP b, SEXP c);
RcppExport SEXP ImbalancedPG_rpg(SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type c(cSEXP);
    __result = Rcpp::wrap(rpg(b, c));
    return __result;
END_RCPP
}
