setwd("c:/Users/leo/git/calibratedDA/code-for-submission/")
require("coda")
N<- 1E4
#generate data using Beta= (-8,1)
X0<- 1
X1<- rnorm(N, 1, 1)
X<- cbind(X0,X1)
beta<- c(-8,1)
Xbeta<- X%*%beta
theta<-  exp(Xbeta)
hist(theta)
beta<- c(-4,1)
Xbeta<- X%*%beta
theta<-  exp(Xbeta)
hist(theta)
y <- rpois(N,theta)
hist(y)
source("poissonCDA.r")
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source("poissonCDA.r")
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
setwd("c:/Users/leo/git/ImbalancedPG/")
library("devtools")
install.packages("devtools")
setwd("c:/Users/leo/git/calibratedDA/")
build('scalableDA')
library("devtools")
build('scalableDA')
install.packages("scalableDA_1.0.tar.gz", repos = NULL, type = "source")
install.packages("RcppArmadillo")
install.packages("scalableDA_1.0.tar.gz", repos = NULL, type = "source")
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  40,auto.layout=F)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  40,auto.layout=F)
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  40,auto.layout=F)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  40,auto.layout=F)
beta<- c(-4,3)
Xbeta<- X%*%beta
theta<-  exp(Xbeta)
y <- rpois(N,theta)
source("poissonCDA.r")
setwd("c:/Users/leo/git/calibratedDA/code-for-submission/")
require("coda")
N<- 1E4
#generate data using Beta= (-8,1)
X0<- 1
X1<- rnorm(N, 1, 1)
X<- cbind(X0,X1)
beta<- c(-4,3)
Xbeta<- X%*%beta
theta<-  exp(Xbeta)
#generate Poisson outcomes
y <- rpois(N,theta)
hist(y)
source("poissonCDA.r")
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  40,auto.layout=F)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.01)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.05)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.01)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.02)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.02,tune = 300)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1,tune = 300)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.05,tune = 300)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.005,tune = 300)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  40,auto.layout=F)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.005,tune = 300)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  40,auto.layout=F)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
y
mean(y)
hist(y)
hist(y,breaks = 100)
hist(y,breaks = 1000)
beta<- c(-6,3)
Xbeta<- X%*%beta
theta<-  exp(Xbeta)
y <- rpois(N,theta)
hist(y)
source("poissonCDA.r")
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  40,auto.layout=F)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.005,tune = 300)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.5,tune = 300)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1,tune = 300)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  40,auto.layout=F)
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  100,auto.layout=F)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
is.null(NULL)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1,ini_beta = beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 1,ini_beta = beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.9,ini_beta = beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.5,ini_beta = beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1,ini_beta = beta)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
hist(y)
hist(y,breaks = 100)
hist(y,breaks = 30)
hist(log(y+1),breaks = 30)
y <- rpois(N,theta)
hist(log(y+1),breaks = 30)
source("poissonCDA.r")
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1)
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1, lambda = 1000)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1, lambda = 1000,MH = F)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  100,auto.layout=F)
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1, lambda = 1000,MH = F)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  100,auto.layout=F)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1, lambda = 1000,MH = F)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 500, fixR = T,r_ini = 1, lambda = 1000,MH = F)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  100,auto.layout=F)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 500,c0 = 0.1)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
fit.CDA$accept_rate
fit.CDA$r
fit.CDA$b
fit.CDA$beta
ts.plot(fit.CDA$beta[,1])
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 1000,c0 = 0.1)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
ts.plot(fit.CDA$beta[,1])
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
source('C:/Users/leo/git/calibratedDA/code-for-submission/poissonCDA.r')
setwd("c:/Users/leo/git/calibratedDA/code-for-submission/")
require("coda")
N<- 1E4
#generate data using Beta= (-8,1)
X0<- 1
X1<- rnorm(N, 1, 1)
X<- cbind(X0,X1)
beta<- c(-6,3)
Xbeta<- X%*%beta
theta<-  exp(Xbeta)
#generate Poisson outcomes
y <- rpois(N,theta)
hist(log(y+1),breaks = 30)
hist(y, breaks = 30)
hist(log(y+1),breaks = 30)
source("poissonCDA.r")
fit.PolyaGamma <-poissonCDA(y,X, burnin = 200, run = 1000, fixR = T,r_ini = 1, lambda = 1000,MH = F)
par(mfrow=c(1,1))
ts.plot(fit.PolyaGamma$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.PolyaGamma$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.PolyaGamma$beta[,2],lag.max =  100,auto.layout=F)
fit.CDA <- poissonCDA(y,X, burnin = 200, run = 1000)
par(mfrow=c(1,1))
ts.plot(fit.CDA$beta)
par(mfrow=c(1,2))
autocorr.plot(fit.CDA$beta[,1],lag.max =  100,auto.layout=F)
autocorr.plot(fit.CDA$beta[,2],lag.max =  100,auto.layout=F)
